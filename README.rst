TOTP-CGI
========
---------------------------------------------------------
A centralized totp solution based on google-authenticator
---------------------------------------------------------

:Author:    mricon@kernel.org
:Date:      2012-02-28
:Copyright: Konstantin Ryabitsev and contributors
:License:   GPLv2+
:Version:   0.1.0

DECRIPTION
----------
The idea of totp-cgi came when lamenting that google-authenticator
implementation is "almost there" to be used as a generic org-wide
2-factor solution, but is annoyingly written to be a
one-secret-per-service (or -per-host) solution. Thus, totp-cgi was born,
which uses files generated by google-authenticator and serves them from
a central installation.

It is intended to be used with pam_url, pam_http, or by a similar
service.

REQUIREMENTS
------------
1. pyotp_
2. google-authenticator_ to generate the .totp files
3. flup_ (for .fcgi only)

.. _pyotp: https://github.com/nathforge/pyotp
.. _google-authenticator: https://code.google.com/p/google-authenticator/
.. _flup: http://trac.saddi.com/flup

INSTALLING
----------
**THIS IS NOT READY TO BE USED. YOU HAVE BEEN WARNED.**

Totp-cgi is intended to be used coupled with a series of security
measures, such as:

1. CGI (or FastCGI) running as its own user via Apache suexec
2. Apache using SSLVerifyClient or at least strict allow/deny rules to
   prevent random clients from accessing the CGI.
3. SELinux configured to transition to totpcgi_t domain from
   httpd_script_t, with appropriate access policies for secrets and
   status files. FIXME: This remains to be done.

If you are not doing all of the above, you are not doing it right.

To install, create:

* /var/lib/totpcgi/secrets (readable by the CGI)
* /var/lib/totpcgi/status (writable by the CGI)

Copy the totpcgi directory into /usr/lib/python*/site-packages
Copy totp.cgi into /var/www/cgi-bin

To use the .fcgi, you'll need to install mod_fcgid.

USING
-----
**PAM integration forthcoming**

Generate the file using google-authenticator_ and put it in
/var/lib/totpcgi/secrets/[username].totp. To test, you can run::

    curl --data 'user=username;token=XXXXXX;mode=PAM_SM_AUTH' http://localhost/cgi-bin/totp.cgi
